name: databricks-cicd
on: [push]
jobs:
  main:
    runs-on: ubuntu-latest
    # Name of the environment you created
    environment: TestGithubAction
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      # Install databricks CLI as per https://docs.databricks.com/dev-tools/cli/databricks-cli.html
      - name: Install databricks CLI
        run: |
         curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh

      # List the databricks repos within the workspace whose credentials
      # are stored in the Github Environment "my-environment"
      - name: List databricks repos
        env:
          # Note the host is an "environment variable" in the Github Environment
          # while the token is a "secret" in the Github Environment
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          databricks repos list
          
      - name: List databricks clusters
        env:
          # Note the host is an "environment variable" in the Github Environment
          # while the token is a "secret" in the Github Environment
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          databricks clusters list
     
      - name: Make Request
        id: myRequest
        uses: fjogeleit/http-request-action@v1
        with:
          url: '${{vars.DATABRICKS_HOST}}/api/2.0/repos'
          method: 'GET'
          bearerToken: ${{secrets.DATABRICKS_TOKEN}}
          customHeaders: '{"Content-Type": "application/json"}'

      - name: Show Response
        run: |
          echo ${{ steps.dbxListRepos.outputs.response }}
          echo ${{ steps.dbxListRepos.outputs.headers }}
